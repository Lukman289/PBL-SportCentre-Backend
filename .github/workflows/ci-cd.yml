name: CI/CD Backend Sport Center

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Install global dependencies
        run: npm install -g rimraf
        
      - name: Create .env file for CI/CD
        run: |
          cat > .env << EOF
          DATABASE_URL="mysql://root:root@localhost:3306/sport_center_test"
          NODE_ENV=development
          PORT=3000
          JWT_SECRET="PPPye7eiDdaCfBjX8gpTDgYFDqbbTb+pTTfo6tYWHfA="
          MIDTRANS_CLIENT_KEY=SB-Mid-client-VswB7qVp7dSJCEtP
          MIDTRANS_SERVER_KEY=SB-Mid-server-k9I3kbysNWc5XW-QWkbDt38f
          API_URL="https://api.sportcenter.id"
          API_URL_DEV="http://localhost:3000"
          FRONTEND_URL="http://localhost:3001"
          COOKIE_DOMAIN=""
          CACHE_TTL=300
          REDIS_URL=redis://localhost:6379
          REDIS_PASSWORD=
          REDIS_TTL=300
          COOKIE_SECRET="G3eA5tR7aP9sW2oL6xQ1zF4yD8bV0jH3"
          COOKIE_MAX_AGE=86400000
          CLOUDINARY_API_KEY=448879952211112
          CLOUDINARY_API_SECRET=vCUNQtphUqAXj8CmaR1hEpXYOLU
          CLOUDINARY_CLOUD_NAME=dxuxgut2c
          EOF
      
      - name: Generate Prisma Client
        run: npx prisma generate
      
      - name: Build
        run: npm run build
      
      - name: Run linter
        run: npm run lint
      
      - name: Run tests
        run: npm run test:quiet
        env:
          NODE_ENV: test
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /pbl/backend
            git pull origin main
            
            # Hapus node_modules dan package-lock.json
            rm -rf node_modules
            rm -f package-lock.json
            
            # Install global dependencies
            npm install -g rimraf
            
            # Install ulang semua dependensi
            npm install --no-fund --no-audit
            
            # Install debug, express dan finalhandler secara eksplisit
            npm install debug express finalhandler --save
            
            # Bersihkan cache npm
            npm cache clean --force
            
            # Build aplikasi
            npm run build
            
            # Restart aplikasi
            npm run restart:prod
            
            echo "Deployment ke server selesai" 